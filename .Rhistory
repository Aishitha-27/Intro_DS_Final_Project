}
cleaned_data <- data_reduced %>%
remove_kd2_outliers("Quantity") %>%
remove_kd2_outliers("UnitPrice") %>%
remove_kd2_outliers("Discount")
# Display the first few rows of the cleaned dataset
str(cleaned_data)
knitr::opts_chunk$set(echo = TRUE)
#VISUALIZATION
# Aggregate sales data
cleaned_data$Sales <- cleaned_data$Quantity * cleaned_data$UnitPrice
sales_by_country <- cleaned_data %>%
group_by(Country) %>%
summarise(TotalSales = sum(Sales, na.rm = TRUE))
# Plot
ggplot(sales_by_country, aes(x = reorder(Country, TotalSales), y = TotalSales)) +
geom_bar(stat = "identity", fill = "skyblue") +
coord_flip() +
labs(title = "Total Sales by Country", x = "Country", y = "Total Sales") +
theme_minimal()
# Count return statuses
return_status_counts <- cleaned_data %>%
group_by(ReturnStatus) %>%
summarise(Count = n())
Here's the updated visualization code using `cleaned_data`:
```r
# Total Sales by Country
sales_by_country <- cleaned_data %>%
group_by(Country) %>%
summarise(TotalSales = sum(Sales, na.rm = TRUE))
ggplot(sales_by_country, aes(x = reorder(Country, TotalSales), y = TotalSales)) +
geom_bar(stat = "identity", fill = "skyblue") +
coord_flip() +
labs(
title = "Total Sales by Country",
x = "Country",
y = "Total Sales"
) +
theme_minimal()
# Total Sales by Country
sales_by_country <- cleaned_data %>%
group_by(Country) %>%
summarise(TotalSales = sum(Sales, na.rm = TRUE))
# Proportion of Return Statuses
return_status_counts <- cleaned_data %>%
group_by(ReturnStatus) %>%
summarise(Count = n())
# Top 10 Products by Sales
sales_by_product <- cleaned_data %>%
group_by(Description) %>%
summarise(TotalSales = sum(Sales, na.rm = TRUE)) %>%
arrange(desc(TotalSales)) %>%
slice(1:10)
#VISUALIZATION
# Aggregate sales data
data_reduced$Sales <- data_reduced$Quantity * data_reduced$UnitPrice
sales_by_country <- data_reduced %>%
group_by(Country) %>%
summarise(TotalSales = sum(Sales, na.rm = TRUE))
#VISUALIZATION
# Aggregate sales data
data_reduced$Sales <- data_reduced$Quantity * data_reduced$UnitPrice
sales_by_country <- data_reduced %>%
group_by(Country) %>%
summarise(TotalSales = sum(Sales, na.rm = TRUE))
# Plot
ggplot(sales_by_country, aes(x = reorder(Country, TotalSales), y = TotalSales)) +
geom_bar(stat = "identity", fill = "skyblue") +
coord_flip() +
labs(title = "Total Sales by Country", x = "Country", y = "Total Sales") +
theme_minimal()
#VISUALIZATION
# Total Sales by Country
sales_by_country <- cleaned_data %>%
group_by(Country) %>%
summarise(TotalSales = sum(Sales, na.rm = TRUE))
install.packages("dplyr")
library(dplyr)
#VISUALIZATION
# Total Sales by Country
sales_by_country <- cleaned_data %>%
group_by(Country) %>%
summarise(TotalSales = sum(Sales, na.rm = TRUE))
ggplot(sales_by_country, aes(x = reorder(Country, TotalSales), y = TotalSales)) +
geom_bar(stat = "identity", fill = "skyblue") +
coord_flip() +
labs(
title = "Total Sales by Country",
x = "Country",
y = "Total Sales"
) +
theme_minimal()
library(ggplot2)
#VISUALIZATION
# Total Sales by Country
sales_by_country <- cleaned_data %>%
group_by(Country) %>%
summarise(TotalSales = sum(Sales, na.rm = TRUE))
ggplot(sales_by_country, aes(x = reorder(Country, TotalSales), y = TotalSales)) +
geom_bar(stat = "identity", fill = "skyblue") +
coord_flip() +
labs(
title = "Total Sales by Country",
x = "Country",
y = "Total Sales"
) +
theme_minimal()
# Proportion of Return Statuses
return_status_counts <- cleaned_data %>%
group_by(ReturnStatus) %>%
summarise(Count = n())
ggplot(return_status_counts, aes(x = "", y = Count, fill = ReturnStatus)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
labs(
title = "Proportion of Return Statuses",
x = NULL,
y = NULL
) +
theme_void() +
theme(legend.title = element_blank())
# Top 10 Products by Sales
sales_by_product <- cleaned_data %>%
group_by(ProductDescription) %>%
summarise(TotalSales = sum(Sales, na.rm = TRUE)) %>%
arrange(desc(TotalSales)) %>%
slice(1:10)
str(cleaned_data)
library(dplyr)
library(ggplot2)
# Summarize total sales by product description
top_products <- cleaned_data %>%
group_by(Description) %>%  # Use 'Description' as it matches your dataset
summarise(TotalSales = sum(Sales, na.rm = TRUE)) %>%  # Sum of 'Sales'
arrange(desc(TotalSales)) %>%  # Arrange by descending total sales
slice(1:10)  # Select the top 10 products
# Plotting top 10 products by total sales
ggplot(top_products, aes(x = reorder(Description, TotalSales), y = TotalSales)) +
geom_bar(stat = "identity", fill = "steelblue") +
coord_flip() +  # Flip coordinates for better readability
labs(
title = "Top 10 Products by Total Sales",
x = "Product Description",
y = "Total Sales"
) +
theme_minimal()
# Sales Heatmap by Warehouse and Category
sales_heatmap_data <- cleaned_data %>%
group_by(WarehouseLocation, Category) %>%
summarise(TotalSales = sum(Sales, na.rm = TRUE)) %>%
pivot_wider(names_from = Category, values_from = TotalSales, values_fill = 0)
install.packages("tidyr")  # Install if not already installed
library(tidyr)             # Load the package
# Sales Heatmap by Warehouse and Category
sales_heatmap_data <- cleaned_data %>%
group_by(WarehouseLocation, Category) %>%
summarise(TotalSales = sum(Sales, na.rm = TRUE)) %>%
pivot_wider(names_from = Category, values_from = TotalSales, values_fill = 0)
heatmap_data <- melt(sales_heatmap_data, id.vars = "WarehouseLocation")
library(reshape2)
# Sales Heatmap by Warehouse and Category
sales_heatmap_data <- cleaned_data %>%
group_by(WarehouseLocation, Category) %>%
summarise(TotalSales = sum(Sales, na.rm = TRUE)) %>%
pivot_wider(names_from = Category, values_from = TotalSales, values_fill = 0)
heatmap_data <- melt(sales_heatmap_data, id.vars = "WarehouseLocation")
ggplot(heatmap_data, aes(x = variable, y = WarehouseLocation, fill = value)) +
geom_tile(color = "white") +
scale_fill_gradient(low = "white", high = "blue", na.value = "gray") +
labs(
title = "Sales Heatmap by Warehouse and Category",
x = "Category",
y = "Warehouse Location",
fill = "Sales"
) +
theme_minimal()
# Stacked Sales by Category Over Time
category_sales <- cleaned_data %>%
group_by(YearMonth, Category) %>%
summarise(TotalSales = sum(Sales, na.rm = TRUE), .groups = "drop")
names(cleaned_data)
aggregated_data <- cleaned_data %>%
group_by(YearMonth, Category) %>%
summarise(TotalSales = sum(Sales, na.rm = TRUE)) %>%
ungroup()
library(dplyr)
# Summarize total sales by product description
top_products <- cleaned_data %>%
group_by(Description) %>%  # Use 'Description' as it matches your dataset
summarise(TotalSales = sum(Sales, na.rm = TRUE)) %>%  # Sum of 'Sales'
arrange(desc(TotalSales)) %>%  # Arrange by descending total sales
slice(1:10)  # Select the top 10 products
# Plotting top 10 products by total sales
ggplot(top_products, aes(x = reorder(Description, TotalSales), y = TotalSales)) +
geom_bar(stat = "identity", fill = "steelblue") +
coord_flip() +  # Flip coordinates for better readability
labs(
title = "Top 10 Products by Total Sales",
x = "Product Description",
y = "Total Sales"
) +
theme_minimal()
# Stacked Sales by Category Over Time
category_sales <- cleaned_data %>%
group_by(YearMonth, Category) %>%
summarise(TotalSales = sum(Sales, na.rm = TRUE), .groups = "drop")
library(lubridate)
aggregated_data <- cleaned_data %>%
group_by(YearMonth, Category) %>%
summarise(TotalSales = sum(Sales, na.rm = TRUE)) %>%
ungroup()
cleaned_data <- cleaned_data %>%
mutate(InvoiceDate = as.POSIXct(InvoiceDate, format = "%Y-%m-%d %H:%M"))
# Create YearMonth column
cleaned_data <- cleaned_data %>%
mutate(YearMonth = format(InvoiceDate, "%Y-%m"))
# Stacked Sales by Category Over Time
category_sales <- cleaned_data %>%
group_by(YearMonth, Category) %>%
summarise(TotalSales = sum(Sales, na.rm = TRUE), .groups = "drop")
ggplot(category_sales, aes(x = YearMonth, y = TotalSales, fill = Category)) +
geom_bar(stat = "identity", position = "stack") +
labs(
title = "Stacked Sales by Category Over Time",
x = "Time (Year-Month)",
y = "Total Sales",
fill = "Category"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Total Sales by Payment Method
sales_by_payment <- cleaned_data %>%
group_by(PaymentMethod) %>%
summarise(TotalSales = sum(Sales, na.rm = TRUE))
ggplot(sales_by_payment, aes(x = reorder(PaymentMethod, TotalSales), y = TotalSales)) +
geom_bar(stat = "identity", fill = "darkgreen") +
coord_flip() +
labs(
title = "Total Sales by Payment Method",
x = "Payment Method",
y = "Total Sales"
) +
theme_minimal()
# Pie chart of top-selling products
top_products_pie <- top_products %>%
ggplot(aes(x = "", y = TotalSales, fill = Description)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
labs(
title = "Top 10 Products by Total Sales",
x = NULL,
y = NULL
) +
theme_void() +
theme(legend.title = element_blank())
# Pie chart of top-selling products
top_products_pie <- top_products %>%
ggplot(aes(x = "", y = TotalSales, fill = Description)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
labs(
title = "Top 10 Products by Total Sales",
x = NULL,
y = NULL
) +
theme_void() +
theme(legend.title = element_blank())
# Sales Trend Over Time
sales_trend <- cleaned_data %>%
group_by(InvoiceDate) %>%
summarise(TotalSales = sum(Sales, na.rm = TRUE))
ggplot(sales_trend, aes(x = InvoiceDate, y = TotalSales)) +
geom_line(color = "blue") +
labs(
title = "Sales Trend Over Time",
x = "Date",
y = "Total Sales"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Sales Distribution by Order Priority
sales_by_priority <- cleaned_data %>%
group_by(OrderPriority) %>%
summarise(TotalSales = sum(Sales, na.rm = TRUE))
ggplot(sales_by_priority, aes(x = reorder(OrderPriority, TotalSales), y = TotalSales)) +
geom_bar(stat = "identity", fill = "orange") +
coord_flip() +
labs(
title = "Sales Distribution by Order Priority",
x = "Order Priority",
y = "Total Sales"
) +
theme_minimal()
# Sales by Customer
sales_by_customer <- cleaned_data %>%
group_by(CustomerID) %>%
summarise(TotalSales = sum(Sales, na.rm = TRUE)) %>%
arrange(desc(TotalSales)) %>%
slice(1:10)  # Top 10 customers
ggplot(sales_by_customer, aes(x = reorder(as.factor(CustomerID), TotalSales), y = TotalSales)) +
geom_bar(stat = "identity", fill = "teal") +
coord_flip() +
labs(
title = "Top 10 Customers by Total Sales",
x = "Customer ID",
y = "Total Sales"
) +
theme_minimal()
library(geom_bar)
# Sales by Customer
sales_by_customer <- cleaned_data %>%
group_by(CustomerID) %>%
summarise(TotalSales = sum(Sales, na.rm = TRUE)) %>%
arrange(desc(TotalSales)) %>%
slice(1:10)  # Top 10 customers
ggplot(sales_by_customer, aes(x = reorder(as.factor(CustomerID), TotalSales), y = TotalSales)) +
geom_bar(stat = "identity", fill = "teal") +
coord_flip() +
labs(
title = "Top 10 Customers by Total Sales",
x = "Customer ID",
y = "Total Sales"
) +
theme_minimal()
# Top 10 countries by total sales
top_countries <- sales_by_country %>%
arrange(desc(TotalSales)) %>%
slice(1:10)
ggplot(top_countries, aes(x = reorder(Country, TotalSales), y = TotalSales)) +
geom_bar(stat = "identity", fill = "lightcoral") +
coord_flip() +
labs(
title = "Top 10 Countries by Total Sales",
x = "Country",
y = "Total Sales"
) +
theme_minimal()
# Total Sales by Category and Return Status
sales_by_category_return <- cleaned_data %>%
group_by(Category, ReturnStatus) %>%
summarise(TotalSales = sum(Sales, na.rm = TRUE))
ggplot(sales_by_category_return, aes(x = Category, y = TotalSales, fill = ReturnStatus)) +
geom_bar(stat = "identity", position = "stack") +
labs(
title = "Total Sales by Category and Return Status",
x = "Category",
y = "Total Sales",
fill = "Return Status"
) +
theme_minimal()
# Sales by Customer
sales_by_customer <- cleaned_data %>%
group_by(CustomerID) %>%
summarise(TotalSales = sum(Sales, na.rm = TRUE)) %>%
arrange(desc(TotalSales)) %>%
slice(1:10)  # Top 10 customers
ggplot(sales_by_customer, aes(x = reorder(as.factor(CustomerID), TotalSales), y = TotalSales)) +
geom_bar(stat = "identity", fill = "teal") +
coord_flip() +
labs(
title = "Top 10 Customers by Total Sales",
x = "Customer ID",
y = "Total Sales"
) +
theme_minimal()
# Sales by Customer
sales_by_customer <- cleaned_data %>%
group_by(CustomerID) %>%
summarise(TotalSales = sum(Sales, na.rm = TRUE)) %>%
arrange(desc(TotalSales)) %>%
slice(1:10)  # Top 10 customers
ggplot(data, aes(x = Category)) +
geom_bar(stat = "identity", fill = "#008080")  # Teal color in hex
# Sales by Customer
sales_by_customer <- cleaned_data %>%
group_by(CustomerID) %>%
summarise(TotalSales = sum(Sales, na.rm = TRUE)) %>%
arrange(desc(TotalSales)) %>%
slice(1:10)  # Top 10 customers
ggplot(sales_by_customer, aes(x = reorder(as.factor(CustomerID), TotalSales), y = TotalSales)) +
geom_bar(stat = "identity", fill = "teal") +
coord_flip() +
labs(
title = "Top 10 Customers by Total Sales",
x = "Customer ID",
y = "Total Sales"
) +
theme_minimal()
# Sales by Customer
sales_by_customer <- cleaned_data %>%
group_by(CustomerID) %>%
summarise(TotalSales = sum(Sales, na.rm = TRUE)) %>%
arrange(desc(TotalSales)) %>%
slice(1:10)  # Top 10 customers
ggplot(sales_by_customer, aes(x = reorder(as.factor(CustomerID), TotalSales), y = TotalSales)) +
geom_bar(stat = "identity", fill = "blue
coord_flip() +
labs(
title = "Top 10 Customers by Total Sales",
# Sales by Customer
sales_by_customer <- cleaned_data %>%
group_by(CustomerID) %>%
summarise(TotalSales = sum(Sales, na.rm = TRUE)) %>%
arrange(desc(TotalSales)) %>%
slice(1:10)  # Top 10 customers
ggplot(sales_by_customer, aes(x = reorder(as.factor(CustomerID), TotalSales), y = TotalSales)) +
geom_bar(stat = "identity", fill = "blue") +
coord_flip() +
labs(
title = "Top 10 Customers by Total Sales",
x = "Customer ID",
y = "Total Sales"
) +
theme_minimal()
# Pie chart of top-selling products
top_products_pie <- top_products %>%
ggplot(aes(x = "", y = TotalSales, fill = Description)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
labs(
title = "Top 10 Products by Total Sales",
x = NULL,
y = NULL
) +
theme_void() +
theme(legend.title = element_blank())
# Pie chart of top-selling products
top_products_pie <- top_products %>%
ggplot(aes(x = "", y = TotalSales, fill = Description)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
labs(
title = "Top 10 Products by Total Sales",
x = NULL,
y = NULL
) +
theme_void() +
theme(legend.title = element_blank())
# Pie chart of top-selling products
top_products_pie <- top_products %>%
ggplot(aes(x = "", y = TotalSales, fill = Description)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
labs(
title = "Top 10 Products by Total Sales",
x = NULL,
y = NULL
) +
theme_void() +
theme(legend.title = element_blank())
# Display the plot
top_products_pie
# Proportion of Return Statuses
return_status_counts <- cleaned_data %>%
group_by(ReturnStatus) %>%
summarise(Count = n()) %>%
mutate(Percentage = (Count / sum(Count)) * 100)  # Calculate the percentage
# Plot with percentages
ggplot(return_status_counts, aes(x = "", y = Count, fill = ReturnStatus)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
geom_text(aes(label = paste0(round(Percentage, 1), "%")), position = position_stack(vjust = 0.5)) +  # Add percentage labels
labs(
title = "Proportion of Return Statuses",
x = NULL,
y = NULL
) +
theme_void() +
theme(legend.title = element_blank())
#VISUALIZATION
# Total Sales by Country
sales_by_country <- cleaned_data %>%
group_by(Country) %>%
summarise(TotalSales = sum(Sales, na.rm = TRUE))
ggplot(sales_by_country, aes(x = reorder(Country, TotalSales), y = TotalSales)) +
geom_bar(stat = "identity", fill = "skyblue") +
coord_flip() +
labs(
title = "Total Sales by Country",
x = "Country",
y = "Total Sales"
) +
theme_minimal()
# Summarize total sales by country
sales_by_country <- cleaned_data %>%
group_by(Country) %>%
summarise(TotalSales = sum(SalesAmount, na.rm = TRUE))
# Summarize total sales by country
sales_by_country <- cleaned_data %>%
group_by(Country) %>%
summarise(TotalSales = sum(TotalSales, na.rm = TRUE))
names(Country)
# Check column names of cleaned_data
names(cleaned_data)
# Summarize total sales by country
sales_by_country <- cleaned_data %>%
group_by(Country) %>%
summarise(Sales = sum(Sales, na.rm = TRUE))
#VISUALIZATION
# Total Sales by Country
sales_by_country <- cleaned_data %>%
group_by(Country) %>%
summarise(TotalSales = sum(Sales, na.rm = TRUE))
ggplot(sales_by_country, aes(x = reorder(Country, TotalSales), y = TotalSales)) +
geom_bar(stat = "identity", fill = "skyblue") +
coord_flip() +
labs(
title = "Total Sales by Country",
x = "Country",
y = "Total Sales"
) +
theme_minimal()
